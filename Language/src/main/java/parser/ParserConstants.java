/* Generated by: ParserGeneratorCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by com.helger.pgcc.output.java.OtherFilesGenJava#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 7;
  /** RegularExpression Id. */
  int COMA = 8;
  /** RegularExpression Id. */
  int ADD = 9;
  /** RegularExpression Id. */
  int SUB = 10;
  /** RegularExpression Id. */
  int MULT = 11;
  /** RegularExpression Id. */
  int DIV = 12;
  /** RegularExpression Id. */
  int EXCL = 13;
  /** RegularExpression Id. */
  int TILDE = 14;
  /** RegularExpression Id. */
  int CONJ = 15;
  /** RegularExpression Id. */
  int DISJ = 16;
  /** RegularExpression Id. */
  int EQUALS = 17;
  /** RegularExpression Id. */
  int EQEQ = 18;
  /** RegularExpression Id. */
  int EXCL_EQUALS = 19;
  /** RegularExpression Id. */
  int GREATER = 20;
  /** RegularExpression Id. */
  int LESS = 21;
  /** RegularExpression Id. */
  int GR_EQUALS = 22;
  /** RegularExpression Id. */
  int LE_EQUALS = 23;
  /** RegularExpression Id. */
  int ARROW = 24;
  /** RegularExpression Id. */
  int SEMICOLON = 25;
  /** RegularExpression Id. */
  int COLON = 26;
  /** RegularExpression Id. */
  int LPAR = 27;
  /** RegularExpression Id. */
  int RPAR = 28;
  /** RegularExpression Id. */
  int LCUR = 29;
  /** RegularExpression Id. */
  int RCUR = 30;
  /** RegularExpression Id. */
  int LET = 31;
  /** RegularExpression Id. */
  int END = 32;
  /** RegularExpression Id. */
  int IN = 33;
  /** RegularExpression Id. */
  int TRUE = 34;
  /** RegularExpression Id. */
  int FALSE = 35;
  /** RegularExpression Id. */
  int INT = 36;
  /** RegularExpression Id. */
  int FLOAT = 37;
  /** RegularExpression Id. */
  int PRINTLN = 38;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 39;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 40;
  /** RegularExpression Id. */
  int IDENTIFIER = 41;
  /** RegularExpression Id. */
  int LETTER = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\".\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\"~\"",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"->\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"let\"",
    "\"end\"",
    "\"in\"",
    "\"true\"",
    "\"false\"",
    "\"int\"",
    "\"float\"",
    "\"println\"",
    "<INTEGER_LITERAL>",
    "<FLOAT_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
