/* Generated by: ParserGeneratorCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by com.helger.pgcc.output.java.OtherFilesGenJava#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 5;
  /** RegularExpression Id. */
  int COMA = 6;
  /** RegularExpression Id. */
  int ADD = 7;
  /** RegularExpression Id. */
  int SUB = 8;
  /** RegularExpression Id. */
  int MULT = 9;
  /** RegularExpression Id. */
  int DIV = 10;
  /** RegularExpression Id. */
  int EXCL = 11;
  /** RegularExpression Id. */
  int CONJ = 12;
  /** RegularExpression Id. */
  int DISJ = 13;
  /** RegularExpression Id. */
  int EQUALS = 14;
  /** RegularExpression Id. */
  int EQEQ = 15;
  /** RegularExpression Id. */
  int EXCL_EQUALS = 16;
  /** RegularExpression Id. */
  int GREATER = 17;
  /** RegularExpression Id. */
  int LESS = 18;
  /** RegularExpression Id. */
  int GR_EQUALS = 19;
  /** RegularExpression Id. */
  int LE_EQUALS = 20;
  /** RegularExpression Id. */
  int ARROW = 21;
  /** RegularExpression Id. */
  int SEMICOLON = 22;
  /** RegularExpression Id. */
  int COLON = 23;
  /** RegularExpression Id. */
  int LPAR = 24;
  /** RegularExpression Id. */
  int RPAR = 25;
  /** RegularExpression Id. */
  int LET = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int IN = 28;
  /** RegularExpression Id. */
  int TRUE = 29;
  /** RegularExpression Id. */
  int FALSE = 30;
  /** RegularExpression Id. */
  int INTEGER = 31;
  /** RegularExpression Id. */
  int FLOAT = 32;
  /** RegularExpression Id. */
  int IDENTIFIER = 33;
  /** RegularExpression Id. */
  int LETTER = 34;
  /** RegularExpression Id. */
  int DIGIT = 35;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\".\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"->\"",
    "\";\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"let\"",
    "\"end\"",
    "\"in\"",
    "\"true\"",
    "\"false\"",
    "<INTEGER>",
    "<FLOAT>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
